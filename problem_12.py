# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

def trial_division(n):
    """
    Use trial division algorithm to find factors of a number, n
    """

    factors = []
    current_factor = 2

    while current_factor ** 2 <= n:
        if n % current_factor == 0:
            factors.append(current_factor)

            if n // current_factor != current_factor:
                factors.append(n // current_factor)

        current_factor += 1

    return factors

n = 0
i = 1

while True:
    n += i
    i += 1
    if len(trial_division(n)) > 500:
        print(n)
        break